"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-m)61a2-&didwr*w6kt(hxv__&56$o@q=%k&(s@@mi000@nn2m2"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles", 
    #Myapps  
    "accounts",
    "projetos",
    "demandas",
    "tarefas",
    "membros",

]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            os.path.join(BASE_DIR, 'templates')],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],

            "libraries": {
            "filtro": "projetos.templatetags.filtro",
            },
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"



# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",},
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'pt-br'

# TIME_ZONE = 'America/Sao_Paulo'
TIME_ZONE = 'Brazil/East'


USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "static/"

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'templates/static/')
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# AUTHENTICATION_BACKENDS = (
#     'accounts.backends.EmailBackend',
#     )

#mensagem de alerta
from django.contrib.messages import constants

MESSAGE_TAGS = {
    constants.ERROR: 'alert-danger',
    constants.WARNING: 'alert-warning',
    constants.DEBUG: 'alert-info',
    constants.SUCCESS: 'alert-success',
    constants.INFO: 'alert-info',
}

#Configuracoes de email
# Email

'''
*** para add em producao utilizar
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
* acrestando novo parametros

EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'meuemail@gmail.com' # conta gmail remetente
EMAIL_HOST_PASSWORD = ''
EMAIL_USE_TLS = True
EMAIL_PORT = 587

'''

# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
# EMAIL_HOST_USER = "seu_email@email.com.br"

# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_HOST_USER = 'rafaelschneider.ap@gmail.com' # conta gmail remetente
# EMAIL_HOST_PASSWORD = 'oghjzjclnxijnxfl'
# EMAIL_USE_TLS = True
# EMAIL_PORT = 587

# Local p/ Conexao do Login
current_user = os.getlogin()
dotenv_path = Path(f'C:\\Users\\{current_user}\\.env')
env = load_dotenv(dotenv_path=dotenv_path)

EMAIL_HOST = ''
EMAIL_HOST_USER = '' 
# EMAIL_HOST_PASSWORD = os.environ['PASSWORD'] #TODO: ver se não é melhor buscar do LDAP ou https://jobu.com.br/2021/06/26/como-esconder-uma-senha-em-um-script-python/ criar um usuario para envio do email;
EMAIL_HOST_PASSWORD = 'a'
EMAIL_USE_TLS = True
EMAIL_PORT = 25
